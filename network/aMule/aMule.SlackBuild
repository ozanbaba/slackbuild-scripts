#!/bin/sh
# Slackware build script for aMule
# Written by Iskar Enev (<iskar.enev[@]gmail.com>)
# Modified by the SlackBuilds.org project
# Maintained by Ozan Türkyılmaz ozan.turkyilmaz@gmial.com
set -x
PRGNAM=aMule
VERSION=${VERSION:-2.3.1rc1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi
DAEMON=${DAEMON:-no}
CMD=${CMD:-no}
WEBSERVER=${WEBSERVER:-no}
ALC=${ALC:-no}
ALCC=${ALCC:-no}
XAS=${XAS:-no}
GEOIP=${GEOIP:-no}
MMAP=${MMAP:-no}
OPTIMIZE=${OPTIMIZE:-yes}

if [ "$DAEMON" = "yes" ]; then 
  AMULE_DAEMON="enable"
else
  AMULE_DAEMON="disable"
fi

if [ "$CMD" = "yes" ]; then
  AMULE_CMD="enable"
  else
  AMULE_CMD="disable"
fi

if [ "$WEBSERVER" = "yes" ]; then
  AMULE_WEBSERVER="enable"
  else
  AMULE_WEBSERVER="disable"
fi

if [ "$ALC" = "yes" ]; then
  AMULE_ALC="enable"
  else
  AMULE_ALC="disable"
fi

if [ "$ALCC" = "yes" ]; then
  AMULE_ALCC="enable"
  else
  AMULE_ALCC="disable"
fi

if [ "$XAS" = "yes" ]; then
  AMULE_XAS="enable"
  else
  AMULE_XAS="disable"
fi

if  [ "$GEOIP" = "yes" ]; then
  AMULE_GEOIP="enable"
  else
  AMULE_GEOIP="disable"
fi

if [ "$MMAP" = "yes" ]; then
  AMULE_MMAP="enable"
  else
  AMULE_MMAP="disable"
fi

if [ "$OPTIMIZE" = "yes" ]; then
  AMULE_OPTIMIZE="enable"
  else
  AMULE_OPTIMIZE="disable"
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
#rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.bz2
cd $PRGNAM-$VERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --with-wx-config=/usr/bin/wx-config \
  --disable-debug \
  --$AMULE_DAEMON-amule-daemon \
  --$AMULE_CMD-amulecmd \
  --$AMULE_WEBSERVER-webserver \
  --$AMULE_ALC-alc \
  --$AMULE_ALCC-alcc \
  --$AMULE_XAS-xas \
  --$AMULE_PLASMAMULE-plasmamule \
  --$AMULE_GEOIP-geoip \
  --$AMULE_MMAP-mmap \
  --$AMULE_OPTIMIZE-optimize \
  --build=$ARCH-slackware-linux

make
make install DESTDIR=$PKG

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

( cd $PKG/usr/man
  find . -type f -exec gzip -9 {} \;
  for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
)

# All of the needed docs are already installed
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
